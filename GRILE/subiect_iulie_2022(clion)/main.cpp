#include <iostream>
using namespace std;

/*
 *  6.
 *  fie f(x, n) = p = f(x, n / 2)
 *  f(x, n / 2) = p = f(x, n / 4)
 *  f(x , n / 4) = p = f(x, n / 8) => daca (n / 8) % 2 == 0 => return p * p
 *  else x * p * p
 *  ....
 *  f(x, n / y) = p = f(x, n / (2 * y))
 *  daca n / (2 * y) == 0
 *      return 1
 *
 * fie f(3, 3) = p = f(3, 1) = 3
 *          return 3 * 3 * 3 = 27;
 *     f(3, 1) = p = f(3, 0) = 1
 *              return 3 * 1 * 1 = 3;
 *     f(3, 0) = 1;
 *     8.
 *     afisare(1000) = 1000 2000 4000  4000 2000 1000
 *     afisare(2000) = 2000 4000  4000 2000
 *     afisare(4000) = 4000  4000
 *
 * 9. BC
 * 10. A-FALS, B
 * X = 6
 * Y = 5
 * B: 6 - (5 * (6 DIV 5))
 *    6 - 5 = 1
 *    X = 5, Y = 6
 *    5 - (6 * (5 DIV 6)
 *    5 - 0 = 5
 *    X = 4 Y = 2
 *    4 - (2 * (4 DIV 2)
 *    4 - 4 = 0 ADEVARAT
 *    CORECT
 *  C: X = 6, Y = 5
 *  6 - ( 6 * ( 6 DIV 5)
 *  6 - 6 = 0 FALS
 *  D: X = 6, Y = 5
 *  6 DIV 5 + 5 DIV 6
 *  1 + 0 = 1
 *  X = 4 Y = 2
 *  4 DIV 2 + 2 DIV 4
 *  2 + 0 = 2 FALS
 * 15. 1 0 0 1 0 1 1 0 0 1 1 1
 *  S = 1 + 2 + 4 + 32 + 64 + 256 + 2048
 *  S = 2050 + 260 + 99 = 2309
 *  256 * 8 = 2048
 *17. F(21369) = F(2136) + 1 = 4;
 *    F(2136) = F(213) + 1 = 3;
 *    F(213) = F(21) + 1 = 2;
 *    F(21) = F(2) + 1 = 1;
 *    F(2) = F(0) = 0;
 *    B -CORECT
 *    F(1233) = F(123) + 1
 *    F(123) = F(12) + 1
 *    F(12) = F(1) + 1
 *    F(1) = F(0);
 *    D - FALS
 * 18. F(15, 3, 10) = F(15, 2, 10)
 *     F(15, 2, 10) = F(15, 3, 9) + "0"
 *     F(15, 3, 9) = F(15, 2, 9)
 *     F(15, 2, 9) = F(15, 3, 8) + "0"
 *     F(15, 3, 8) = F(15, 2, 7)
 *     F(15, 2, 7) = F(15, 4, 5) + "#"
 *     F(15, 4, 5) = F(15, 5, 4) + "0"
 *     F(15, 5, 4) = "*";
 *     "*0#00
 *   19. [5, 3, 2, 1, 1, 1]
 *   i = 1: [1, 3, 2, 1, 1, 5]
 *   i = 2: [1, 1, 2, 1, 3, 5]
 *   i = 3: [1, 1, 1, 2, 3, 5]
 *   i = 4: [1, 1, 2, 1, 3, 5]
 *   i = 5: [1, 3, 2, 1, 1, 5]
 *   i = 6: [5, 3, 2, 1, 1, 1]
 *
 *   21.
 *    x = 2, n = 5
 *    b = 1 * 2 * 3 = 6
 *    a = 6 * 4 * 5
 *    A(n,x) = (n!) / (n - x)! => C-CORECT
 *    C(n,x) = (n!) / (x!)((n - x))!
 *
 * 26. N = 3
 *     F(3) = 2 * (2 * (2 * 1 + 1) + 1) + 1 = 15
 *
 *     F(2) = 2 * (2 * 1 + 1) + 1 = 7
 *     F(1) = 2 * F(0) + 1 = 3
 *     F(0) = 1
 *
 *     F(4) = 2 * F(3) + 1 = 31
 *     F(3) = 2 * F(2) + 1 = 15
 *     F(2) = 2 * F(1) + 1 = 7
 *     F(1) = 2 * F(0) + 1 = 3
 *     F(0) = 1;
 *
 *     CAZ GENERAL: F(N) = 2*F(N - 1) + 1
 *                  F(N - 1) = 2 * F(N - 2) + 1
 *                  F(N - 2) = 2 * F(N - 3) + 1
 *                  ...........................
 *                  F(N - N + 1) = 2 * F(N - N) + 1
 *                  F(0) = 1
    29.
    N = 4
    N - 1 = 3
    N =      100
    N - 1 =  011
             000
   N     =  6 =  110
   N - 1 =  5 =  101
                  100
                  4
    8 = 1000
    7 = 0111
    30.
    n = 2
    i = 2
    j = 3
    k = 2
    p = 3
    return 1, 2
 */
int n = 5;
int value[10];
void afisare(){
    for(int i = 1; i <= n; ++i)
        cout << value[i] << " ";
    cout << "\n";

}
void bkt(int value[], int n, int k, int p){
    p++;
    value[k] = p;
    if(p == n)
        afisare();
    else{
        for(int i = 1; i <= n; ++i)
            if(value[i] == 0)
                bkt(value, n, i, p);
    }
    p--;
    value[k] = 0;
}
int main() {
    bkt(value, 5, 1, 0);

    return 0;
}
